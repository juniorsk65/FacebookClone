-- MySQL Script generated by MySQL Workbench
-- qua 31 out 2018 10:59:10 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema facebook
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema facebook
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `facebook` ;
USE `facebook` ;

-- -----------------------------------------------------
-- Table `facebook`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facebook`.`Usuario` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT,
  `nomeUsuario` VARCHAR(255) NOT NULL,
  `cidade` VARCHAR(45) NOT NULL,
  `privacidade` TINYINT(3) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idUsuario`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facebook`.`Amizade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facebook`.`Amizade` (
  `idUsuario1` INT NOT NULL,
  `idUsuario2` INT NOT NULL,
  `bloqueio` TINYINT(1) NULL COMMENT 'se true, eles n達o podem se ver. se false, eles s達o amigos, se relacionamento n達o existe, n達o sao amigos \n',
  `status` TINYINT(3) NULL,
  PRIMARY KEY (`idUsuario1`, `idUsuario2`),
  INDEX `fk_Amizade_Usuario1_idx` (`idUsuario1` ASC) VISIBLE,
  INDEX `fk_Amizade_Usuario2_idx` (`idUsuario2` ASC) VISIBLE,
  CONSTRAINT `fk_Amizade_Usuario1`
    FOREIGN KEY (`idUsuario1`)
    REFERENCES `facebook`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Amizade_Usuario2`
    FOREIGN KEY (`idUsuario2`)
    REFERENCES `facebook`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facebook`.`Grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facebook`.`Grupo` (
  `idGrupo` INT NOT NULL AUTO_INCREMENT,
  `nomeGrupo` VARCHAR(45) NULL,
  `descricaoGrupo` VARCHAR(45) NULL,
  `foto` BLOB NULL,
  PRIMARY KEY (`idGrupo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facebook`.`Participacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facebook`.`Participacao` (
  `Usuario_idUsuario` INT NOT NULL,
  `Grupo_idGrupo` INT NOT NULL,
  `Participacao` TINYINT(3) NULL,
  `Administrador` TINYINT(3) NULL,
  PRIMARY KEY (`Usuario_idUsuario`, `Grupo_idGrupo`),
  INDEX `fk_Usuario_has_Grupo_Grupo1_idx` (`Grupo_idGrupo` ASC) VISIBLE,
  INDEX `fk_Usuario_has_Grupo_Usuario1_idx` (`Usuario_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_Usuario_has_Grupo_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `facebook`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_has_Grupo_Grupo1`
    FOREIGN KEY (`Grupo_idGrupo`)
    REFERENCES `facebook`.`Grupo` (`idGrupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facebook`.`PostagensGrupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facebook`.`PostagensGrupo` (
  `idPostagem` INT(255) NOT NULL AUTO_INCREMENT,
  `Usuario_idUsuario` INT NOT NULL,
  `Grupo_idGrupo` INT NOT NULL,
  PRIMARY KEY (`idPostagem`, `Usuario_idUsuario`, `Grupo_idGrupo`),
  INDEX `fk_Usuario_has_Grupo_Grupo2_idx` (`Grupo_idGrupo` ASC) VISIBLE,
  INDEX `fk_Usuario_has_Grupo_Usuario2_idx` (`Usuario_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_PostagensGrupo_has_Usuario`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `facebook`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PostagensGrupo_has_Grupo`
    FOREIGN KEY (`Grupo_idGrupo`)
    REFERENCES `facebook`.`Grupo` (`idGrupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facebook`.`PostagensUsuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facebook`.`PostagensUsuario` (
  `idPostagemUsuario` INT NOT NULL AUTO_INCREMENT,
  `usuarioProprietario` INT NOT NULL,
  `idUsuario2` INT NOT NULL,
  `conteudo` TEXT(512) NULL,
  PRIMARY KEY (`idPostagemUsuario`, `usuarioProprietario`, `idUsuario2`),
  INDEX `fk_PostagensUsuario_Usuario1_idx` (`usuarioProprietario` ASC) VISIBLE,
  INDEX `fk_PostagensUsuario_Usuario2_idx` (`idUsuario2` ASC) VISIBLE,
  CONSTRAINT `fk_PostagensUsuario_Usuario1`
    FOREIGN KEY (`usuarioProprietario`)
    REFERENCES `facebook`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PostagensUsuario_Usuario2`
    FOREIGN KEY (`idUsuario2`)
    REFERENCES `facebook`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facebook`.`Resposta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facebook`.`Resposta` (
  `idComentario` INT NOT NULL AUTO_INCREMENT,
  `idPostagemUsuario` INT NOT NULL,
  `idUsuario` INT NOT NULL,
  `conteudo` TEXT(512) NULL,
  `Reposta_idComentario` INT NOT NULL,
  PRIMARY KEY (`idComentario`, `idPostagemUsuario`, `idUsuario`),
  INDEX `fk_Comentario_PostagensUsuario1_idx` (`idPostagemUsuario` ASC) VISIBLE,
  INDEX `fk_Reposta_Usuario1_idx` (`idUsuario` ASC) VISIBLE,
  INDEX `fk_Reposta_Reposta1_idx` (`Reposta_idComentario` ASC) VISIBLE,
  CONSTRAINT `fk_Comentario_PostagensUsuario1`
    FOREIGN KEY (`idPostagemUsuario`)
    REFERENCES `facebook`.`PostagensUsuario` (`idPostagemUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reposta_Usuario1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `facebook`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reposta_Reposta1`
    FOREIGN KEY (`Reposta_idComentario`)
    REFERENCES `facebook`.`Resposta` (`idComentario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facebook`.`RespostaPostagemGrupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facebook`.`RespostaPostagemGrupo` (
  `RespostaUsuarioGrupo` INT NOT NULL AUTO_INCREMENT,
  `PostagensGrupo_idPostagem` INT NOT NULL,
  `Usuario_idUsuario` INT NOT NULL,
  `RespostaUsuarioGrupo_RespostaUsuarioGrupo` INT NOT NULL,
  PRIMARY KEY (`RespostaUsuarioGrupo`, `PostagensGrupo_idPostagem`, `Usuario_idUsuario`),
  INDEX `fk_RespostaUsuarioGrupo_PostagensGrupo1_idx` (`PostagensGrupo_idPostagem` ASC) VISIBLE,
  INDEX `fk_RespostaUsuarioGrupo_Usuario1_idx` (`Usuario_idUsuario` ASC) VISIBLE,
  INDEX `fk_RespostaUsuarioGrupo_RespostaUsuarioGrupo1_idx` (`RespostaUsuarioGrupo_RespostaUsuarioGrupo` ASC) VISIBLE,
  CONSTRAINT `fk_RespostaUsuarioGrupo_PostagensGrupo1`
    FOREIGN KEY (`PostagensGrupo_idPostagem`)
    REFERENCES `facebook`.`PostagensGrupo` (`idPostagem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RespostaUsuarioGrupo_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `facebook`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RespostaUsuarioGrupo_RespostaUsuarioGrupo1`
    FOREIGN KEY (`RespostaUsuarioGrupo_RespostaUsuarioGrupo`)
    REFERENCES `facebook`.`RespostaPostagemGrupo` (`RespostaUsuarioGrupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
